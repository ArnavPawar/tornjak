server {
  # location of SPIRE socket
  # here, set to default SPIRE socket path
  spire_socket_path = "unix:///tmp/spire-server/private/api.sock"

  ### BEGIN SERVER CONNECTION CONFIGURATION ###
  # Note: at least one of http, tls, and mtls must be configured
  # The server can open multiple if multiple sections included
  # The server only ends when all connections error

  # configure HTTP connection to Tornjak server
  http {
    enabled = true
    port = 10000 # container port for HTTP connection
  }

  # configure TLS connection to Tornjak server
  tls {
    enabled = true
    port = 20000                 # container port for TLS connection
    cert = "sample-keys/tls.pem" # TLS cert
    key = "sample-keys/key.pem"  # TLS key
  }

  # configure mTLS connection to Tornjak server
  mtls {
    enabled = true
    port = 30000                  # container port for mTLS connection
    cert = "sample-keys/tls.pem"  # mTLS cert
    key = "sample-keys/key.pem"   # mTLS key
    ca = "sample-keys/rootCA.pem" # mTLS CA
  }

  ### END SERVER CONNECTION CONFIGURATION ###
}

plugins {

  ### BEGIN DATASTORE PLUGIN CONFIGURATION ###

  # Configure SQL local database for Tornjak
  DataStore "sql" {
    plugin_data {
      drivername = "sqlite3"
      filename = "/run/spire/data/tornjak.sqlite3" # location of database
    }
  }

  ### END DATASTORE PLUGIN CONFIGURATION

  ### BEGIN IAM PLUGIN CONFIGURATION ###
  # Note: if no UserManagement configuration included, authentication treated as noop

  # Configure Keycloak as external Authentication server
  UserManagement "KeycloakAuth" {
    plugin_data {
      # jwksURL - URL for JWKS verification
      # here is a sample for Keycloak running locally on Minikube
      jwksURL = "http://host.minikube.internal:8080/realms/tornjak/protocol/openid-connect/certs"
      # for cloud deployment it would be something like:
      # jwksURL = "http://<ingress_access>/realms/tornjak/protocol/openid-connect/certs"

      # redirectURL - URL for redirecting after successful authentication
      # here is a sample for Keycloak running locally on minikube
      redirectURL = "http://localhost:8080/realms/tornjak/protocol/openid-connect/auth?client_id=Tornjak-React-auth"
      # for a cloud deployment it would look something like:
      # redirectURL= "http://<ingress_access>/realms/tornjak/protocol/openid-connect/auth?client_id=Tornjak-React-auth"
    }
  }

  ### END IAM PLUGIN CONFIGURATION


}
